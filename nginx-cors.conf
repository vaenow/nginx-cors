server {
  listen 8080;
  server_name nginx-cors-server;
  resolver 8.8.8.8;

  location / {
    root  /app/dist/;
    index index.html;
  }

  location ~* ^/(.*):/(.*)$ {
    # rewrite ^/cors/(.*) /$1 break;
    # rewrite .* / break;
    proxy_pass $1://$2;
    proxy_redirect ~*$1://$2(.*) /;
    # proxy_set_header Host $host;
    # proxy_set_header X-Real-IP $remote_addr;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_set_header X-Forwarded-Host $server_name;
    add_header 'Access-Control-Allow-Origin' "$http_origin";
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
    # add_header X-debug-message "Proxy $request_uri via $1://$2 from $remote_addr" always;
    
    # cache
    # proxy_cache MyCache;         
    # proxy_cache_valid any 10s;
    # add_header X-Proxy-Cache $upstream_cache_status; 
    # proxy_ignore_headers Expires Cache-Control Set-Cookie Vary;

    proxy_ignore_headers Expires Cache-Control;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_cache "cache_cors";
    proxy_cache_key $scheme$host$request_uri;
    proxy_cache_min_uses 1;
    proxy_cache_valid 200 301 302 10s;
    proxy_cache_valid any 10s;
    proxy_cache_revalidate off;
    proxy_cache_lock on;
    proxy_cache_methods GET;
    proxy_cache_use_stale timeout updating  error;
    proxy_cache_bypass $cookie_nocache $arg_nocache;
    proxy_no_cache $cookie_nocache $arg_nocache$arg_comment;
    proxy_no_cache $http_pragma    $http_authorization;
    add_header nginx-cache "$upstream_cache_status";
  }

  # error_page 404 /404.html;
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }
}

